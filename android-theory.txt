Урок 3
Цикл жизни Activity
одно Activity - одно окно 
для взаимодействия пользователя с приложением (системой)
AppCompatActivity() - обращается к системе, создает окно
layout file - разметка экрана...
 <activity
            android:name=".Activity2"
            android:exported="false">
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
декларация в манифесте нового активити

<intent-filter>
        <action android:name="android.intent.action.MAIN" />

        <category android:name="android.intent.category.LAUNCHER" />//открывается при нажатии на иконку
</intent-filter>

ЦИКЛ ЖИЗНИ АКТИВИТИ
1. onCreate - запускается ОДИН РАЗ, когда активити уже готово, ресурсы все загрузились (готовы), 
можно писать код (ошибки не будет)
override fun onCreate(savedInstanceState: Bundle?) {
   super.onCreate(savedInstanceState)
   setContentView(R.layout.activity_main)
}
	|
	v
2. onStart()
	|
	v
3. onResume()
	|
	v
ПРИЛОЖЕНИЕ РАБОТАЕТ
на этом этапе больше не запуститься onCreate, onStart (нужен Restart()), onResume
	|
	v
Например, другое активити вышло впереди текущего активити
4. Приложение вошло в onPause() - все процессы тормозятся

ВАЖНО: БАЗУ ДАННЫХ ОТКРЫВАТЬ (присваивать переменные?) В onResume(),
так как после 5. onPause() (-> onResume()) и 6. onStop() (-> onStart()) (- перезапуск)
например, в onPause() будет закрытие БД, а открывалась она в onCreate() - 
вызывается один раз - бд больше не откроется - ПРОБЛЕМА!

5. onPause() - поверх экрана другой экран (сообщение)
6. onStop() (вызывает и onPause()) - основной активити невидим на экране
также на п. 5 и 6 процессы приложения могут быть уничтожены (память освобождена)
из-за нехватки ресурсов устройства (КРАЙНИЙ СЛУЧАЙ) (-> onCreate())
	|
	v
7. onDestroy() - выход из активити, активити разрушается, данные освобождаются
Вызывается при выходе из приложения

Более подробно на https://neco-desarrollo.es/activity


Урок 4
Logcat 
Log.e - error 
Log.d - debug
Log.w - warning
Log.v - verbose (подробности)
Log.i - info

TAG для того, чтобы фильтровать логи
можно назвать тэг именем активити

Примечание
во время onPause и onStop приложение не разрушено, оно на фоне
Поэтому нужно в этих функциях освободить ресурсы и остановить процессы (пр: бд),
чтобы освободить систему до того момента, как пользователь не вернется в наше приложение

Урок 5
все элементы на экране - view

Урок 6-8
Переменные
var - можно перезаписать (например, счетчик)
val (литерал) - нельзя перезаписать переменную, только читать (константа) (например, findViewById)
глобальные переменные - временная память, она будет освобождена при onDestroy (пока не разрушится активити)
локальные переменные - временная память, она будет освобождена при выходн из блока, где существует переменная

этим и плохи глобальные переменные, занимают место в памяти на протяжении работы всего активити.
лучше использовать локальные

CTRL + D копирование и вставка строки на следующую строку

int to string
7.toString()
.to<все что угодно>

var counter : Int = 0
0 - литерал (нельзя изменить 0) (- конкретное значение)
counter - переменная (изменяемая тк вар)

Типы данных
Int 
Byte (занимает меньше памяти чем Int)
Long

Выбирать с умом (для оптимизации)
https://kotlinlang.org/docs/basic-types.html

Типы данных в котлине - классы (у них много полезных функций (String !))

Способ 1
class MainActivity : AppCompatActivity() {
    var tv : TextView? = null // ? - может быть null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        tv = findViewById(R.id.tvTest)
        tv?.text = "downton abbey" // нужна проверка, что не null
    }
}

Способ 2 (правильный)
class MainActivity : AppCompatActivity() {
    lateinit var tv : TextView // lateinit var - инициализация будет позже

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        tv = findViewById(R.id.tvTest)
        tv.text = "downton abbey"
    }
}

Способ 3 (binding)

findViewById после setContentView!!!
